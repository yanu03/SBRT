<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
	 <head>
	<w2:type>DEFAULT</w2:type>
	<w2:buildDate/>
	<xf:model>
		<xf:instance>
			<data xmlns="" />
		</xf:instance>
		<w2:dataCollection baseNode="map">
			<w2:dataList baseNode="list" repeatNode="map" id="dlt_BRT_CHART_INFO" saveRemovedData="true">
				<w2:columnInfo>
					<w2:column id="INDEX" name="순서" dataType="text"></w2:column>
					<w2:column id="ACCRU_LEN" name="누적길이" dataType="text"></w2:column>
					<w2:column id="NODE_NM" name="노드명" dataType="text"></w2:column>
					<w2:column id="ARRV_TM" name="도착시간" dataType="text"></w2:column>
					<w2:column id="DPRT_TM" name="출발시간" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>	
			<w2:dataList baseNode="list" repeatNode="map" id="dlt_BRT_OPER_ALLOC_PL_NODE_CNT" saveRemovedData="true">
				<w2:columnInfo>
					<w2:column id="CNT" name="개수" dataType="number" defaultValue="0"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" repeatNode="map" id="dlt_OPER_SN_INFO" saveRemovedData="true">
				<w2:columnInfo>
					<w2:column id="OPER_SN" name="운행회차" dataType="number" defaultValue="0"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" repeatNode="map" id="dlt_BRT_OPER_ALLOC_PL_NODE_INFO" saveRemovedData="true">
					<w2:columnInfo>
						<w2:column id="REP_ROUT_ID" name="대표노선아이디" dataType="text"></w2:column>
						<w2:column id="DAY_DIV" name="요일구분" dataType="text"></w2:column>
						<w2:column id="WAY_DIV" name="상하행구분" dataType="text"></w2:column>
						<w2:column id="OPER_SN" name="운행순번" dataType="text"></w2:column>
						<w2:column id="NODE_ID" name="노드아이디" dataType="text"></w2:column>
						<w2:column id="NODE_NM" name="노드명" dataType="text"></w2:column>
						<w2:column id="NODE_SN" name="노드순번" dataType="text"></w2:column>
						<w2:column id="ALLOC_NO" name="배차번호" dataType="text"></w2:column>
						<w2:column id="ROUT_ID" name="노선아이디" dataType="text"></w2:column>
						<w2:column id="COR_ID" name="코스아이디" dataType="text"></w2:column>
						<w2:column id="NODE_TYPE" name="노드유형" dataType="text"></w2:column>
						<w2:column id="ARRV_TM" name="도착시간" dataType="text"></w2:column>
						<w2:column id="DPRT_TM" name="출발시간" dataType="text"></w2:column>
						<w2:column id="UPD_DTM" name="갱신일시" dataType="date"></w2:column>
						<w2:column id="UPD_ID" name="갱신아이디" dataType="text"></w2:column>
						<w2:column id="REP_ROUT_NM" name="대표노선명" dataType="text"></w2:column>
						<w2:column id="WAY_ASC_NM" name="상행명" dataType="text"></w2:column>
						<w2:column id="WAY_DESC_NM" name="하행명" dataType="text"></w2:column>
						<w2:column id="ACCRU_LEN" name="누적길이" dataType="text"></w2:column>
						<w2:column id="ARRVDPRT_TM" name="도착출발시간" dataType="text"></w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataMap baseNode="map" id="dma_sub_search">
					<w2:keyInfo>
						<w2:key id="DAY_DIV" name="요일구분" dataType="text"></w2:key>
						<w2:key id="ROUT_ID" name="노선ID" dataType="text"></w2:key>
						<w2:key id="ROUT_NM" name="노선명" dataType="text"></w2:key>
						<w2:key id="OPER_SN" name="운행회차" dataType="text"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>			
		</w2:dataCollection>
		<w2:workflowCollection></w2:workflowCollection>
			<xf:submission id="sub_AL0203G1R0" ref="data:json,dma_sub_search" target='data:json,dlt_BRT_OPER_ALLOC_PL_NODE_CNT'
				action="/al/AL0203G0P1" method="post" mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler=""
				customHandler="" mode="asynchronous" processMsg="조회 중입니다..." ev:submit="" ev:submitdone="scwin.sub_AL0203G1R0_submitdone" ev:submiterror=""
				abortTrigger="">
			</xf:submission>
			<xf:submission id="sub_AL0203G0P0" ref="data:json,dma_sub_search" target='data:json,dlt_BRT_OPER_ALLOC_PL_NODE_INFO'
				action="/operPlan/selectOperAllocPlanNode" method="post" mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler=""
				customHandler="" mode="asynchronous" processMsg="조회 중입니다..." ev:submit="" ev:submitdone="scwin.sub_AL0203G0P0_submitdone" ev:submiterror=""
				abortTrigger="">
			</xf:submission>
	</xf:model>
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment.min.js" integrity="sha512-rmZcZsyhe0/MAjquhTgiUcb4d9knaFc7b5xAfju483gbEXTkeJRUMIPk6s3ySZMYUHEcjKbjLjyddGWMrNEvZg==" crossorigin="anonymous"></script>
	<script src='https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js'></script>
	<script type="text/javascript" lazy="false"><![CDATA[
	scwin.onpageload = function() {
	
		debugger;
		scwin.param = com.getParameter();
		scwin.closeCallbackFncName = scwin.param.callbackFn;
		com.setEnterKeyEvent(popup_header, scwin.btn_search_onclick);
		
		dlt_BRT_OPER_ALLOC_PL_NODE_INFO.setJSON(scwin.param.data4, true);
		
		var chkCnt = scwin.param.data5;
		
		dma_sub_search.set("ROUT_ID", scwin.param.data);
		dma_sub_search.set("DAY_DIV", scwin.param.data2);
		dma_sub_search.set("ROUT_NM", scwin.param.data3);
		//dma_sub_search.set("OPER_SN", scwin.param.data4);
		
		//com.executeSubmission(sub_AL0203G1R0);		
		//com.executeSubmission(sub_AL0203G0P0);
		//scwin.drawChart(chkCnt);		
		//scwin.testDrawChart(chkCnt);
		scwin.testDrawChart2(chkCnt);
	};
	
	scwin.onpageunload = function() {
		
	};
	
	scwin.fusionChart = function(row){
		dlt_BRT_CHART_INFO.removeAll();
		var sttnNm = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(row, "NODE_NM");
		
		var old_open_sn = -1;

		var chartindex = 0;
		var rowCntArr = dlt_BRT_OPER_ALLOC_PL_NODE_CNT.getAllJSON();
		var allData = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getAllJSON();
		var rowIndex = 0;
		var rowCnt = 0;
		var maxCnt = 0;
		//var j = 0;
		var rowCntLength = rowCntArr.length;
	
		for(var i = 0; i < 5; i++) {
			if(maxCnt < rowCntArr[i].CNT)maxCnt = rowCntArr[i].CNT;
			rowCnt =  rowCntArr[i].CNT;
			
			for(var j = 0; j < rowCnt; j++) {
				if(j==0||j==rowCnt-1){
					if(j==0)chartindex= 0;
				 	var accruLen = allData[rowIndex+j].ACCRU_LEN;
				 	var arrvTm = allData[rowIndex+j].ARRV_TM.substring(0,5);
					var dprtTm = allData[rowIndex+j].DPRT_TM.substring(0,5);
					var nodeNm = allData[rowIndex+j].NODE_NM + "(" + allData[rowIndex+j].OPER_SN + "회)";
					var index = dlt_BRT_CHART_INFO.insertRow(rowIndex+j);
					dlt_BRT_CHART_INFO.setCellData(index, "INDEX", chartindex);
					dlt_BRT_CHART_INFO.setCellData(index, "ACCRU_LEN", accruLen);
					dlt_BRT_CHART_INFO.setCellData(index, "ARRV_TM", arrvTm);
					//dlt_BRT_CHART_INFO.setCellData(index, "DPRT_TM", dprtTm);
					dlt_BRT_CHART_INFO.setCellData(index, "NODE_NM", nodeNm);
					chartindex++;
				}
				else{
					var accruLen = allData[rowIndex+j].ACCRU_LEN;
					var arrvTm = allData[rowIndex+j].ARRV_TM.substring(0,5);
					var dprtTm = allData[rowIndex+j].DPRT_TM.substring(0,5);
					var nodeNm = allData[rowIndex+j].NODE_NM + "(" + allData[rowIndex+j].OPER_SN + "회)";
					var index = dlt_BRT_CHART_INFO.insertRow(rowIndex+j);
					dlt_BRT_CHART_INFO.setCellData(index, "INDEX", chartindex);
					dlt_BRT_CHART_INFO.setCellData(index, "ACCRU_LEN", accruLen);
					dlt_BRT_CHART_INFO.setCellData(index, "ARRV_TM", arrvTm);
					//dlt_BRT_CHART_INFO.setCellData(index, "DPRT_TM", dprtTm);
					dlt_BRT_CHART_INFO.setCellData(index, "NODE_NM", nodeNm);
					chartindex++;
				}
			}
			rowIndex += rowCnt;
			if(i>=rowCntArr.length-1)break;
		}
		
		var options = { 
			labelStep:"5"		
		    ,xAxisName:"시간"
		    ,yAxisName:"노선"
      		,labelDisplay: "wrap"
      		,canvasPadding: "20"
      		,xAxisValueDecimals: "5"
      		//,numberSuffix: "/"+sttnNm
      		,lineColor: "#f56363"
      		,valuePadding: "50"
      		,labelPadding: "20"
		}
		
		
		CHART.setChartAttribute(options);
		CHART.setChartColumnSimpleRef("data:dlt_BRT_CHART_INFO", "ARRV_TM", "", "ACCRU_LEN");
		//CHART.draw();
		
		//AL0203CHT0.setChartColumnSimpleRef("data:dlt_BRT_OPER_ALLOC_PL_NODE_INFO", "ARRV_TM", null, "NODE_SN");
		//AL0203CHT0.setChartColumnRef("data:dlt_BRT_OPER_ALLOC_PL_NODE_INFO", "ARRV_TM");
		//AL0203CHT0.setJSONData();
        //AL0203CHT0.draw();
	
	}
	
	scwin.sub_AL0203G0P0_submitdone = function(e) {
		dma_sub_search.set("OPER_SN", ' ('+dma_sub_search.get("OPER_SN")+')회차');
		
	};
	
	var Categories = function(){
		this.category = [];
	}
	
	function date_ascending(a, b) {
       return a - b;
    };


	
	scwin.drawChart = function(chkCnt){
		debugger;
		var i = 0;
		var j = 0;
		var num = 0;
		
		//var categories = new Array();	//category추가
		var category = new Array();		//label추가
		var charArray = new Array();	//seriesname, data[]추가
		var data = new Array();			//value추가
		
		
		var rowCount = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getRowCount();
		var jsonData = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getAllJSON();
		var transData = new Array();
		
		for(var x = 0; x < rowCount; x++){
			var arrvTm = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(x, "ARRV_TM");
			var dprtTm = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(x, "DPRT_TM");
			
			var categoryJson = new Object();
			categoryJson.label = arrvTm;
			categoryJson = JSON.stringify(categoryJson);
			category.push(JSON.parse(categoryJson));
			
			var categoryJson = new Object();
			categoryJson.label = dprtTm;
			categoryJson = JSON.stringify(categoryJson);
			category.push(JSON.parse(categoryJson));
		};
		
		category.sort(date_ascending);
		
		for(i; i<chkCnt; i++){
			for(j; j<rowCount; j++){
				if(jsonData[num].OPER_SN  ==  dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(j, "OPER_SN")){
					transData.push(dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getRowJSON(j));
				}else if(jsonData[num].OPER_SN  !=  dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(j, "OPER_SN")){
					num = j;
					j = j;
					break;
				}
			}
			
			for(var y = 0; y < transData.length; y++){
				var categoryJson = new Object();
				var dataJson = new Object();
				
				var seriesname = transData[y].OPER_SN + "회차";
				var operSn = transData[y].OPER_SN;
				//var arrvTm = transData[y].ARRV_TM;
				//var dprtTm = transData[y].DPRT_TM;
				var accruLen = transData[y].ACCRU_LEN;
				var nodeType = transData[y].NODE_TYPE;
				
				
				if(nodeType=='NT002'){
					//categoryJson.label = arrvTm;
					//categoryJson = JSON.stringify(categoryJson);
					//category.push(JSON.parse(categoryJson));
					
					dataJson.value = accruLen;
					dataJson = JSON.stringify(dataJson);
					data.push(JSON.parse(dataJson));
				}
				
				if((nodeType=='NT002')&&(arrvTm!=dprtTm)){
				
					var categoryJson = new Object();
					var dataJson = new Object();
					
					//categoryJson.label = dprtTm;
					//categoryJson = JSON.stringify(categoryJson);
					//category.push(JSON.parse(categoryJson));
					
					dataJson.value = accruLen;
					dataJson = JSON.stringify(dataJson);
					data.push(JSON.parse(dataJson));
				}
				
			};
		

		//var categoryData = new Categories();
		var charData = new CharData();
		
		charData.data = data;
		charData.seriesname = seriesname;
		//categoryData.category = category;
		
		charArray.push(charData);
		//category.push(category);
		
		transData = [];
		//data = [];
	}
		
		var test = {
			
		    "chart": {
		        "lineThickness": "3",
		        "flatScrollBars": "1",
		        "scrollheight": "3",
		        "numVisiblePlot": "7",
		        "theme": "fusion"
		    },
		    
		    "categories": [{
			     category
		    }],
		    
		    "dataset":
		    	charArray
		    
		}
	
		var options = {
			labelStep:"1"		
			,xAxisName:"시간"
			,yAxisName:"거리"
	      	,labelDisplay: "wrap"
	      	//,canvasPadding: "20"
	      	,lineColor: "#f56363"
	      	//,valuePadding: "50"
	      	//,labelPadding: "20"
	      	,lineThickness: "2"
	      	,flatScrollBars: "1"
	        ,scrollheight: "6"
	        ,numVisiblePlot: "60"
		}
		
		setTimeout(function() {
			//CHART.setSize(3500, 750);
			CHART.setChartAttribute(options);
			CHART.setJSONData(test);
			CHART.draw();
		},100);
		
		
	}	
	
	
	
	scwin.testDrawChart = function(chkCnt){
		
		
		debugger;
		
		var i = 0;
		var j = 0;
		var num = 0;
		
		//var categories = new Array();	//category추가
		var category = new Array();		//label추가
		var charArray = new Array();	//seriesname, data[]추가
		var data = new Array();			//value추가
		
		
		var rowCount = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getRowCount();
		var jsonData = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getAllJSON();
		var transData = new Array();
		
		for(i; i<chkCnt; i++){
			for(j; j<rowCount; j++){
				if(jsonData[num].OPER_SN  ==  dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(j, "OPER_SN")){
					transData.push(dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getRowJSON(j));
				}else if(jsonData[num].OPER_SN  !=  dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(j, "OPER_SN")){
					num = j;
					j = j;
					break;
				}
			}
			
			for(var y = 0; y < transData.length; y++){
				var categoryJson = new Object();
				var dataJson = new Object();
				var seriesname = transData[y].OPER_SN + "회차";
				var operSn = transData[y].OPER_SN;
				var arrvTm = transData[y].ARRV_TM;
				var dprtTm = transData[y].DPRT_TM;
				var accruLen = transData[y].ACCRU_LEN;
				var nodeType = transData[y].NODE_TYPE;
				
				if(nodeType=='NT002'){
					
					categoryJson.label = arrvTm;
					categoryJson = JSON.stringify(categoryJson);
					category.push(JSON.parse(categoryJson));
					
					dataJson.value = accruLen;
					dataJson = JSON.stringify(dataJson);
					data.push(JSON.parse(dataJson));
				}
				
				if((nodeType=='NT002')&&(arrvTm!=dprtTm)){
				
					var categoryJson = new Object();
					var dataJson = new Object();
					
					categoryJson.label = dprtTm;
					categoryJson = JSON.stringify(categoryJson);
					category.push(JSON.parse(categoryJson));
					
					dataJson.value = accruLen;
					dataJson = JSON.stringify(dataJson);
					data.push(JSON.parse(dataJson));
				}
				
			};

		/*var charData = new CharData();
		
		charData.data = data;
		charData.seriesname = seriesname;
		
		charArray.push(charData);*/
		
		transData = [];
	}
		
		
	
	}
	
	var CharData = function(){
		this.label = {};
		this.data = [];
	}
	
	scwin.testDrawChart2 = function(chkCnt){
		debugger;
		var datasets = new Array();
		var transData = new Array();
		var i = 0;
		var j = 0;
		var num = 0;

		var rowCount = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getRowCount();
		var jsonData = dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getAllJSON();
		
		for(i; i<chkCnt; i++){
			var data = new Array();
			
			for(j; j<rowCount; j++){
				if(jsonData[num].OPER_SN  ==  dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(j, "OPER_SN")){
					transData.push(dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getRowJSON(j));
				}else if(jsonData[num].OPER_SN  !=  dlt_BRT_OPER_ALLOC_PL_NODE_INFO.getCellData(j, "OPER_SN")){
					num = j;
					j = j;
					break;
				}
			}
			
			for(var y = 0; y < transData.length; y++){
				var label = transData[y].OPER_SN + "회차";
				var updDtm = transData[y].UPD_DTM;
				var operSn = transData[y].OPER_SN;
				var arrvTm = transData[y].ARRV_TM;
				var dprtTm = transData[y].DPRT_TM;
				var accruLen = transData[y].ACCRU_LEN;
				var nodeType = transData[y].NODE_TYPE;
				
				if(nodeType=='NT002'){
					var categoryJson = new Object();
					
					categoryJson.x = new Date(updDtm+' '+arrvTm);
					categoryJson.y = accruLen;
					data.push(categoryJson);
					
				}
				
				if((nodeType=='NT002')&&(arrvTm!=dprtTm)){
					var categoryJson = new Object();
				
					categoryJson.x = new Date(updDtm+' '+dprtTm);
					categoryJson.y = accruLen;
					data.push(categoryJson);
				}
				
			};

		var charData = new CharData();
		
		charData.data = data;
		charData.label = label;
		
		datasets.push(charData);
		
		transData = [];
	}
		
		var ctx = document.getElementById('myChart');
		var myChart = new Chart(ctx, {
			    type: 'line',
				data: {
					datasets
				    /*datasets: [{
					      label: '2호차',
					      data: [{
					        x: new Date(2021, 10, 19, 03, 24, 20),
					        y: 1
					      }, {
					        x: new Date(2021, 10, 19, 4, 24, 0),
					        y: 10
					      }
					      ]
					    },
					    {
					      label: '3호차',
					      data: [{
					        x: new Date(2021, 10, 19, 3, 28, 0),
					        y: 2
					      }, {
					        x: new Date(2021, 10, 19, 4, 24, 0),
					        y: 11
					      }]
					    }
					    ]*/
				  },
			    options: {
			        scales: {
			           xAxes: [{
				        type: 'time',
				        time: {
				          unit: 'minute'
				        }
				      }]
			        }
			    }
			});
	}
	
	
	]]></script>
	</head>
	 <body ev:onpageload="scwin.onpageload" ev:onpageunload="scwin.onpageunload">
	 	<xf:group class="popup_container grdr_20_a" id="popup_container" style="">
	 		<xf:group id="popup_header" style="" class="popup_header">
	 			<xf:group class="gr_search" id="" style="">
	 				<xf:group class="label" id="" style="">
	 					<w2:span class="" id="" label="" ref="data:dma_sub_search.ROUT_NM"></w2:span>
	 					<w2:span class="" id="" label="" ref="data:dma_sub_search.OPER_SN"></w2:span>
	 				</xf:group>
	 			</xf:group>
	 		</xf:group>
	 		<xf:group style="" id="" class="popup_content">
	 				<!--  <w2:fusionchart accessibility="false" drawType="javascript" runflashAt="IE6,IE7,IE8" seriesType="simple" chartType="ScrollLine2D"
		 				style="width: auto; height: 100%;" id="CHART" ref="" labelNode="" valueNode="" seriesNode="" version="">
		 			</w2:fusionchart>-->
		 			<canvas id="myChart" height="130"></canvas>
	 		</xf:group>
	 	</xf:group>
	 </body>
</html>
