-- 트리거 sbrt.BMS_CRS_GRP_SIGOPER_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `BMS_CRS_GRP_SIGOPER_INFO_after_update` AFTER UPDATE ON `BMS_CRS_GRP_SIGOPER_INFO` FOR EACH ROW BEGIN

	INSERT INTO BMS_CRS_GRP_SIGOPER_HIS(
			BMS_CRS_GRP_SIGOPER_HIS.CRS_GRP_ID
			,BMS_CRS_GRP_SIGOPER_HIS.UPD_DTM
			,BMS_CRS_GRP_SIGOPER_HIS.SIG_CTR_STS
			,BMS_CRS_GRP_SIGOPER_HIS.SIG_OPER_MODE
			,BMS_CRS_GRP_SIGOPER_HIS.PHASE_LEN
			,BMS_CRS_GRP_SIGOPER_HIS.PERIOD_CNT
			,BMS_CRS_GRP_SIGOPER_HIS.DAY_PL_NO
			,BMS_CRS_GRP_SIGOPER_HIS.PHASE_PL_NO
			,BMS_CRS_GRP_SIGOPER_HIS.LINK_PL_NO)
	VALUE(
			OLD.CRS_GRP_ID
			,NOW()
			,OLD.SIG_CTR_STS
			,OLD.SIG_OPER_MODE
			,OLD.PHASE_LEN
			,OLD.PERIOD_CNT
			,OLD.DAY_PL_NO
			,OLD.PHASE_PL_NO
			,OLD.LINK_PL_NO
	);

END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BMS_CRS_MST_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `BMS_CRS_MST_after_update` AFTER UPDATE ON `BMS_CRS_MST` FOR EACH ROW BEGIN
	INSERT INTO BMS_CRS_HIS(
			BMS_CRS_HIS.CRS_ID
			,BMS_CRS_HIS.CRS_NM
			,BMS_CRS_HIS.UPD_DTM
			,BMS_CRS_HIS.GPS_X
			,BMS_CRS_HIS.GPS_Y
			,BMS_CRS_HIS.CRS_KIND
			,BMS_CRS_HIS.SIG_CTR_TYPE
			,BMS_CRS_HIS.MAIN_PHASE
			,BMS_CRS_HIS.PHASE_CNT
			,BMS_CRS_HIS.PERIOD_LEN
			,BMS_CRS_HIS.PERIOD_CNT
			,BMS_CRS_HIS.APPL_ST_DT
			,BMS_CRS_HIS.APPL_ED_DT
			,BMS_CRS_HIS.REMARK
			,BMS_CRS_HIS.USE_YN
			,BMS_CRS_HIS.DEL_YN
			,BMS_CRS_HIS.UPD_ID)
	VALUE(
			OLD.CRS_ID
			,OLD.CRS_NM
			,NOW()
			,OLD.GPS_X
			,OLD.GPS_Y
			,OLD.CRS_KIND
			,OLD.SIG_CTR_TYPE
			,OLD.MAIN_PHASE
			,OLD.PHASE_CNT
			,OLD.PERIOD_LEN
			,OLD.PERIOD_CNT
			,OLD.APPL_ST_DT
			,OLD.APPL_ED_DT
			,OLD.REMARK
			,OLD.USE_YN
			,OLD.DEL_YN
			,OLD.UPD_ID
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BMS_CRS_SIGOPER_DTL_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BMS_CRS_SIGOPER_DTL_INFO_after_update` AFTER UPDATE ON `sbrt`.`BMS_CRS_SIGOPER_DTL_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BMS_CRS_SIGOPER_DTL_HIS(
			BMS_CRS_SIGOPER_DTL_HIS.CRS_ID
			,BMS_CRS_SIGOPER_DTL_HIS.UPD_DTM
			,BMS_CRS_SIGOPER_DTL_HIS.SIG_CTR_TYPE
			,BMS_CRS_SIGOPER_DTL_HIS.SIG_CTR_OPER_DTM
			,BMS_CRS_SIGOPER_DTL_HIS.PWR_STS
			,BMS_CRS_SIGOPER_DTL_HIS.MCU_STS
			,BMS_CRS_SIGOPER_DTL_HIS.DIMMING_STS
			,BMS_CRS_SIGOPER_DTL_HIS.RING_MODE
			,BMS_CRS_SIGOPER_DTL_HIS.PPC_STS
			,BMS_CRS_SIGOPER_DTL_HIS.CTR_MODE
			,BMS_CRS_SIGOPER_DTL_HIS.A_PHASE_NO
			,BMS_CRS_SIGOPER_DTL_HIS.A_STEP_NO
			,BMS_CRS_SIGOPER_DTL_HIS.B_PHASE_NO
			,BMS_CRS_SIGOPER_DTL_HIS.B_STEP_NO
			,BMS_CRS_SIGOPER_DTL_HIS.PP_MNL_PRCS_YN
			,BMS_CRS_SIGOPER_DTL_HIS.PP_MNL_YN
			,BMS_CRS_SIGOPER_DTL_HIS.PP_FLASH_YN
			,BMS_CRS_SIGOPER_DTL_HIS.PP_LIGHT_YN
			,BMS_CRS_SIGOPER_DTL_HIS.CONFLICT_STS
			,BMS_CRS_SIGOPER_DTL_HIS.LIGHT_STS
			,BMS_CRS_SIGOPER_DTL_HIS.BLINK_STS
			,BMS_CRS_SIGOPER_DTL_HIS.DB_STS
			,BMS_CRS_SIGOPER_DTL_HIS.PUSHBTN_YN
			,BMS_CRS_SIGOPER_DTL_HIS.FLASH_REASON
			,BMS_CRS_SIGOPER_DTL_HIS.LTURN_YN
			,BMS_CRS_SIGOPER_DTL_HIS.MNL_YN
			,BMS_CRS_SIGOPER_DTL_HIS.CONFLICT_YN
			,BMS_CRS_SIGOPER_DTL_HIS.DOOR_STS
			,BMS_CRS_SIGOPER_DTL_HIS.CONFLICT_LSU_NO
			,BMS_CRS_SIGOPER_DTL_HIS.CONFLICT_EVID
			,BMS_CRS_SIGOPER_DTL_HIS.CONFLICT_CIRCUIT_NO
			,BMS_CRS_SIGOPER_DTL_HIS.PED_LIGHT_STS
			,BMS_CRS_SIGOPER_DTL_HIS.PUSHBTN_STS
			,BMS_CRS_SIGOPER_DTL_HIS.PED_DEV_STS
			,BMS_CRS_SIGOPER_DTL_HIS.OPT_STS
			,BMS_CRS_SIGOPER_DTL_HIS.PERIOD_CNTR
			,BMS_CRS_SIGOPER_DTL_HIS.PREV_PERIOD_LEN
			,BMS_CRS_SIGOPER_DTL_HIS.PERIOD_LEN
			,BMS_CRS_SIGOPER_DTL_HIS.OFFSET
			,BMS_CRS_SIGOPER_DTL_HIS.PHASE_HOLD_NO
			,BMS_CRS_SIGOPER_DTL_HIS.PHASE_OMIT_NO
			,BMS_CRS_SIGOPER_DTL_HIS.LIGHT_TYPE
			,BMS_CRS_SIGOPER_DTL_HIS.MAP_NO
			,BMS_CRS_SIGOPER_DTL_HIS.SPILL_BACK_STS
			,BMS_CRS_SIGOPER_DTL_HIS.MODULE_STS
			,BMS_CRS_SIGOPER_DTL_HIS.A_PSIG_CTR_STS
			,BMS_CRS_SIGOPER_DTL_HIS.A_PSIG_CTR_MODE
			,BMS_CRS_SIGOPER_DTL_HIS.A_PSIG_PERIOD
			,BMS_CRS_SIGOPER_DTL_HIS.A_VAL
			,BMS_CRS_SIGOPER_DTL_HIS.B_VAL)
	VALUE(
			OLD.CRS_ID
			,NOW()
			,OLD.SIG_CTR_TYPE
			,OLD.SIG_CTR_OPER_DTM
			,OLD.PWR_STS
			,OLD.MCU_STS
			,OLD.DIMMING_STS
			,OLD.RING_MODE
			,OLD.PPC_STS
			,OLD.CTR_MODE
			,OLD.A_PHASE_NO
			,OLD.A_STEP_NO
			,OLD.B_PHASE_NO
			,OLD.B_STEP_NO
			,OLD.PP_MNL_PRCS_YN
			,OLD.PP_MNL_YN
			,OLD.PP_FLASH_YN
			,OLD.PP_LIGHT_YN
			,OLD.CONFLICT_STS
			,OLD.LIGHT_STS
			,OLD.BLINK_STS
			,OLD.DB_STS
			,OLD.PUSHBTN_YN
			,OLD.FLASH_REASON
			,OLD.LTURN_YN
			,OLD.MNL_YN
			,OLD.CONFLICT_YN
			,OLD.DOOR_STS
			,OLD.CONFLICT_LSU_NO
			,OLD.CONFLICT_EVID
			,OLD.CONFLICT_CIRCUIT_NO
			,OLD.PED_LIGHT_STS
			,OLD.PUSHBTN_STS
			,OLD.PED_DEV_STS
			,OLD.OPT_STS
			,OLD.PERIOD_CNTR
			,OLD.PREV_PERIOD_LEN
			,OLD.PERIOD_LEN
			,OLD.OFFSET
			,OLD.PHASE_HOLD_NO
			,OLD.PHASE_OMIT_NO
			,OLD.LIGHT_TYPE
			,OLD.MAP_NO
			,OLD.SPILL_BACK_STS
			,OLD.MODULE_STS
			,OLD.A_PSIG_CTR_STS
			,OLD.A_PSIG_CTR_MODE
			,OLD.A_PSIG_PERIOD
			,OLD.A_VAL
			,OLD.B_VAL
				);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BMS_CRS_SIGOPER_PHASE_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BMS_CRS_SIGOPER_PHASE_INFO_after_update` AFTER UPDATE ON `sbrt`.`BMS_CRS_SIGOPER_PHASE_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BMS_CRS_SIGOPER_PHASE_INFO_HIS(
			BMS_CRS_SIGOPER_PHASE_INFO_HIS.CRS_ID
			,BMS_CRS_SIGOPER_PHASE_INFO_HIS.UPD_DTM
			,BMS_CRS_SIGOPER_PHASE_INFO_HIS.CTR_STS
			,BMS_CRS_SIGOPER_PHASE_INFO_HIS.CTR_MODE
			,BMS_CRS_SIGOPER_PHASE_INFO_HIS.A_PHASE_NO
			,BMS_CRS_SIGOPER_PHASE_INFO_HIS.A_PHASE_TM
			,BMS_CRS_SIGOPER_PHASE_INFO_HIS.B_PHASE_NO
			,BMS_CRS_SIGOPER_PHASE_INFO_HIS.B_PHASE_TM
			)
	VALUE(
			OLD.CRS_ID
			,NEW.UPD_DTM
			,OLD.CTR_STS
			,OLD.CTR_MODE
			,OLD.A_PHASE_NO
			,OLD.A_PHASE_TM
			,OLD.B_PHASE_NO
			,OLD.B_PHASE_TM
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BMS_CRS_SIGOPER_TRF_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BMS_CRS_SIGOPER_TRF_INFO_after_update` AFTER UPDATE ON `sbrt`.`BMS_CRS_SIGOPER_TRF_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BMS_CRS_SIGOPER_TRF_HIS(
			BMS_CRS_SIGOPER_TRF_HIS.CRS_ID
			,BMS_CRS_SIGOPER_TRF_HIS.CRS_STS
			,BMS_CRS_SIGOPER_TRF_HIS.CRS_GRP_ID
			,BMS_CRS_SIGOPER_TRF_HIS.PHASE_CNT
			,BMS_CRS_SIGOPER_TRF_HIS.MAIN_PHASE_NO
			,BMS_CRS_SIGOPER_TRF_HIS.PHASE_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.LINK_PL_VAL
			,BMS_CRS_SIGOPER_TRF_HIS.A1_PL
			,BMS_CRS_SIGOPER_TRF_HIS.A2_PL
			,BMS_CRS_SIGOPER_TRF_HIS.A3_PL
			,BMS_CRS_SIGOPER_TRF_HIS.A4_PL
			,BMS_CRS_SIGOPER_TRF_HIS.A5_PL
			,BMS_CRS_SIGOPER_TRF_HIS.A6_PL
			,BMS_CRS_SIGOPER_TRF_HIS.A7_PL
			,BMS_CRS_SIGOPER_TRF_HIS.A8_PL
			,BMS_CRS_SIGOPER_TRF_HIS.B1_PL
			,BMS_CRS_SIGOPER_TRF_HIS.B2_PL
			,BMS_CRS_SIGOPER_TRF_HIS.B3_PL
			,BMS_CRS_SIGOPER_TRF_HIS.B4_PL
			,BMS_CRS_SIGOPER_TRF_HIS.B5_PL
			,BMS_CRS_SIGOPER_TRF_HIS.B6_PL
			,BMS_CRS_SIGOPER_TRF_HIS.B7_PL
			,BMS_CRS_SIGOPER_TRF_HIS.B8_PL
			,BMS_CRS_SIGOPER_TRF_HIS.A1_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.A2_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.A3_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.A4_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.A5_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.A6_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.A7_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.A8_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.B1_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.B2_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.B3_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.B4_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.B5_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.B6_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.B7_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.B8_TRF
			,BMS_CRS_SIGOPER_TRF_HIS.A1_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.A1_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.A2_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.A2_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.A3_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.A3_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.A4_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.A4_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.A5_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.A5_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.A6_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.A6_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.A7_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.A7_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.A8_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.A8_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.B1_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.B1_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.B2_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.B2_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.B3_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.B3_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.B4_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.B4_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.B5_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.B5_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.B6_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.B6_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.B7_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.B7_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.B8_SPD
			,BMS_CRS_SIGOPER_TRF_HIS.B8_LEN
			,BMS_CRS_SIGOPER_TRF_HIS.UPD_DTM)
	VALUE(
			OLD.CRS_ID
			,OLD.CRS_STS
			,OLD.CRS_GRP_ID
			,OLD.PHASE_CNT
			,OLD.MAIN_PHASE_NO
			,OLD.PHASE_LEN
			,OLD.LINK_PL_VAL
			,OLD.A1_PL
			,OLD.A2_PL
			,OLD.A3_PL
			,OLD.A4_PL
			,OLD.A5_PL
			,OLD.A6_PL
			,OLD.A7_PL
			,OLD.A8_PL
			,OLD.B1_PL
			,OLD.B2_PL
			,OLD.B3_PL
			,OLD.B4_PL
			,OLD.B5_PL
			,OLD.B6_PL
			,OLD.B7_PL
			,OLD.B8_PL
			,OLD.A1_TRF
			,OLD.A2_TRF
			,OLD.A3_TRF
			,OLD.A4_TRF
			,OLD.A5_TRF
			,OLD.A6_TRF
			,OLD.A7_TRF
			,OLD.A8_TRF
			,OLD.B1_TRF
			,OLD.B2_TRF
			,OLD.B3_TRF
			,OLD.B4_TRF
			,OLD.B5_TRF
			,OLD.B6_TRF
			,OLD.B7_TRF
			,OLD.B8_TRF
			,OLD.A1_SPD
			,OLD.A1_LEN
			,OLD.A2_SPD
			,OLD.A2_LEN
			,OLD.A3_SPD
			,OLD.A3_LEN
			,OLD.A4_SPD
			,OLD.A4_LEN
			,OLD.A5_SPD
			,OLD.A5_LEN
			,OLD.A6_SPD
			,OLD.A6_LEN
			,OLD.A7_SPD
			,OLD.A7_LEN
			,OLD.A8_SPD
			,OLD.A8_LEN
			,OLD.B1_SPD
			,OLD.B1_LEN
			,OLD.B2_SPD
			,OLD.B2_LEN
			,OLD.B3_SPD
			,OLD.B3_LEN
			,OLD.B4_SPD
			,OLD.B4_LEN
			,OLD.B5_SPD
			,OLD.B5_LEN
			,OLD.B6_SPD
			,OLD.B6_LEN
			,OLD.B7_SPD
			,OLD.B7_LEN
			,OLD.B8_SPD
			,OLD.B8_LEN
			,NOW()
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BMS_LINK_MST_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `BMS_LINK_MST_after_update` AFTER UPDATE ON `BMS_LINK_MST` FOR EACH ROW BEGIN


/*
INSERT INTO BMS_LINK_HIS(
			BMS_LINK_HIS.LINK_ID
			,BMS_LINK_HIS.UPD_DTM
			,BMS_LINK_HIS.LINK_NM
			,BMS_LINK_HIS.LINK_ENM
			,BMS_LINK_HIS.ST_NODE_ID
			,BMS_LINK_HIS.ED_NODE_ID
			,BMS_LINK_HIS.LINK_SECTION_TYPE
			,BMS_LINK_HIS.LINK_TYPE
			,BMS_LINK_HIS.DIR
			,BMS_LINK_HIS.LEN
			,BMS_LINK_HIS.LINE_CNT
			,BMS_LINK_HIS.GATE_N1
			,BMS_LINK_HIS.GATE_N2
			,BMS_LINK_HIS.ROAD_NM
			,BMS_LINK_HIS.CONN_CD
			,BMS_LINK_HIS.MAX_SPD
			,BMS_LINK_HIS.AVRG_SPD
			,BMS_LINK_HIS.USE_YN
			,BMS_LINK_HIS.SBRT_YN
			,BMS_LINK_HIS.UPD_ID)
	VALUE(
			OLD.LINK_ID
			,NOW()
			,OLD.LINK_NM
			,OLD.LINK_ENM
			,OLD.ST_NODE_ID
			,OLD.ED_NODE_ID
			,OLD.LINK_SECTION_TYPE
			,OLD.LINK_TYPE
			,OLD.DIR
			,OLD.LEN
			,OLD.LINE_CNT
			,OLD.GATE_N1
			,OLD.GATE_N2
			,OLD.ROAD_NM
			,OLD.CONN_CD
			,OLD.MAX_SPD
			,OLD.AVRG_SPD
			,OLD.USE_YN
			,OLD.SBRT_YN
			,OLD.UPD_ID
	);
	*/

END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BMS_ROUT_MST_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `BMS_ROUT_MST_after_update` AFTER UPDATE ON `BMS_ROUT_MST` FOR EACH ROW BEGIN
INSERT INTO BMS_ROUT_HIS(
			BMS_ROUT_HIS.ROUT_ID
			,BMS_ROUT_HIS.UPD_DTM
			,BMS_ROUT_HIS.REP_ROUT_ID
			,BMS_ROUT_HIS.INT_ROUT_ID
			,BMS_ROUT_HIS.REP_ROUT_NM
			,BMS_ROUT_HIS.ROUT_NM
			,BMS_ROUT_HIS.ROUT_TYPE
			,BMS_ROUT_HIS.ROUT_DIV
			,BMS_ROUT_HIS.DVC_NM
			,BMS_ROUT_HIS.RSV_ROUT_YN
			,BMS_ROUT_HIS.ST_STTN_ID
			,BMS_ROUT_HIS.ST_STTN_NM
			,BMS_ROUT_HIS.ST_STTN_ENM
			,BMS_ROUT_HIS.ED_STTN_ID
			,BMS_ROUT_HIS.ED_STTN_ENM
			,BMS_ROUT_HIS.ED_STTN_NM
			,BMS_ROUT_HIS.RET_STTN_ID
			,BMS_ROUT_HIS.RET_STTN_NM
			,BMS_ROUT_HIS.RET_STTN_ENM
			,BMS_ROUT_HIS.STTN_CNT
			,BMS_ROUT_HIS.ROUT_LEN
			,BMS_ROUT_HIS.ROUT_STRT_LEN
			,BMS_ROUT_HIS.CURVATURE
			,BMS_ROUT_HIS.JIT_DSPCH_YN
			,BMS_ROUT_HIS.LIC_VHC_CNT
			,BMS_ROUT_HIS.SPR_VHC_CNT
			,BMS_ROUT_HIS.APPL_ST_DT
			,BMS_ROUT_HIS.APPL_ED_DT
			,BMS_ROUT_HIS.WAY_DIV
			,BMS_ROUT_HIS.USER_WAY_DIV
			,BMS_ROUT_HIS.WAY_INFO
			,BMS_ROUT_HIS.AREA
			,BMS_ROUT_HIS.SHAPE_DIV
			,BMS_ROUT_HIS.HOLI_YN
			,BMS_ROUT_HIS.USE_YN
			,BMS_ROUT_HIS.DEL_YN
			,BMS_ROUT_HIS.REMARK
			,BMS_ROUT_HIS.UPD_ID)
	VALUE(
			OLD.ROUT_ID
			,NOW()
			,OLD.REP_ROUT_ID
			,OLD.INT_ROUT_ID
			,OLD.REP_ROUT_NM
			,OLD.ROUT_NM
			,OLD.ROUT_TYPE
			,OLD.ROUT_DIV
			,OLD.DVC_NM
			,OLD.RSV_ROUT_YN
			,OLD.ST_STTN_ID
			,OLD.ST_STTN_NM
			,OLD.ST_STTN_ENM
			,OLD.ED_STTN_ID
			,OLD.ED_STTN_ENM
			,OLD.ED_STTN_NM
			,OLD.RET_STTN_ID
			,OLD.RET_STTN_NM
			,OLD.RET_STTN_ENM
			,OLD.STTN_CNT
			,OLD.ROUT_LEN
			,OLD.ROUT_STRT_LEN
			,OLD.CURVATURE
			,OLD.JIT_DSPCH_YN
			,OLD.LIC_VHC_CNT
			,OLD.SPR_VHC_CNT
			,OLD.APPL_ST_DT
			,OLD.APPL_ED_DT
			,OLD.WAY_DIV
			,OLD.USER_WAY_DIV
			,OLD.WAY_INFO
			,OLD.AREA
			,OLD.SHAPE_DIV
			,OLD.HOLI_YN
			,OLD.USE_YN
			,OLD.DEL_YN
			,OLD.REMARK
			,OLD.UPD_ID
				);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BMS_STTN_MST_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BMS_STTN_MST_after_update` AFTER UPDATE ON `sbrt`.`BMS_STTN_MST`
  FOR EACH ROW
BEGIN
INSERT INTO BMS_STTN_HIS(
			BMS_STTN_HIS.STTN_ID
			,BMS_STTN_HIS.UPD_DTM
			,BMS_STTN_HIS.STTN_NM
			,BMS_STTN_HIS.STTN_ENM
			,BMS_STTN_HIS.AREA
			,BMS_STTN_HIS.STTN_NO
			,BMS_STTN_HIS.CENTER_YN
			,BMS_STTN_HIS.STTN_FCLT_TYPE
			,BMS_STTN_HIS.APPL_RDS
			,BMS_STTN_HIS.BAY_TYPE
			,BMS_STTN_HIS.BAY_LEN
			,BMS_STTN_HIS.LINE_CNT
			,BMS_STTN_HIS.APPL_ST_DT
			,BMS_STTN_HIS.APPL_ED_DT
			,BMS_STTN_HIS.USE_YN
			,BMS_STTN_HIS.REMARK
			,BMS_STTN_HIS.UPD_ID)
	VALUE(
			OLD.STTN_ID
			,NOW()
			,OLD.STTN_NM
			,OLD.STTN_ENM
			,OLD.AREA
			,OLD.STTN_NO
			,OLD.CENTER_YN
			,OLD.STTN_FCLT_TYPE
			,OLD.APPL_RDS
			,OLD.BAY_TYPE
			,OLD.BAY_LEN
			,OLD.LINE_CNT
			,OLD.APPL_ST_DT
			,OLD.APPL_ED_DT
			,OLD.USE_YN
			,OLD.REMARK
			,OLD.UPD_ID
					);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_ALLOC_PL_MST_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_ALLOC_PL_MST_after_update` AFTER UPDATE ON `sbrt`.`BRT_ALLOC_PL_MST`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_ALLOC_PL_MST_HIS(
			BRT_ALLOC_PL_MST_HIS.REP_ROUT_ID
			,BRT_ALLOC_PL_MST_HIS.ALLOC_NO
			,BRT_ALLOC_PL_MST_HIS.DAY_DIV
			,BRT_ALLOC_PL_MST_HIS.VHC_ID
			,BRT_ALLOC_PL_MST_HIS.WAY_DIV
			,BRT_ALLOC_PL_MST_HIS.UPD_DTM
			,BRT_ALLOC_PL_MST_HIS.UPD_ID
			)
	VALUE(
			OLD.REP_ROUT_ID
			,OLD.ALLOC_NO
			,OLD.DAY_DIV
			,OLD.VHC_ID
			,OLD.WAY_DIV
			,NOW()
			,OLD.UPD_ID
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_CUR_CHG_OPER_DTL_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_CUR_CHG_OPER_DTL_INFO_after_update` AFTER UPDATE ON `sbrt`.`BRT_CUR_CHG_OPER_DTL_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_CUR_CHG_OPER_DTL_INFO_HIS(
			BRT_CUR_CHG_OPER_DTL_INFO_HIS.OPER_DT
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.REP_ROUT_ID
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.ROUT_ID
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.COR_ID
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.ALLOC_NO
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.OPER_SN
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.NODE_ID
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.NODE_SN
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.NODE_TYPE
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.DPRT_TM
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.ARRV_TM
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.OCR_DTM
			,BRT_CUR_CHG_OPER_DTL_INFO_HIS.UPD_DTM)
	VALUE(
			OLD.OPER_DT
			,OLD.REP_ROUT_ID
			,OLD.ROUT_ID
			,OLD.COR_ID
			,OLD.ALLOC_NO
			,OLD.OPER_SN
			,OLD.NODE_ID
			,OLD.NODE_SN
			,OLD.NODE_TYPE
			,OLD.DPRT_TM
			,OLD.ARRV_TM
			,OLD.OCR_DTM
			,NOW()
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_CUR_CHG_OPER_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_CUR_CHG_OPER_INFO_after_update` AFTER UPDATE ON `sbrt`.`BRT_CUR_CHG_OPER_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_CUR_CHG_OPER_INFO_HIS(
			BRT_CUR_CHG_OPER_INFO_HIS.OPER_DT
			,BRT_CUR_CHG_OPER_INFO_HIS.REP_ROUT_ID
			,BRT_CUR_CHG_OPER_INFO_HIS.ROUT_ID
			,BRT_CUR_CHG_OPER_INFO_HIS.ALLOC_NO
			,BRT_CUR_CHG_OPER_INFO_HIS.OPER_SN
			,BRT_CUR_CHG_OPER_INFO_HIS.VHC_ID
			,BRT_CUR_CHG_OPER_INFO_HIS.VHC_NO
			,BRT_CUR_CHG_OPER_INFO_HIS.OCR_LINK_ID
			,BRT_CUR_CHG_OPER_INFO_HIS.OCR_NODE_ID
			,BRT_CUR_CHG_OPER_INFO_HIS.OCR_NODE_TYPE
			,BRT_CUR_CHG_OPER_INFO_HIS.GPS_X
			,BRT_CUR_CHG_OPER_INFO_HIS.GPS_Y
			,BRT_CUR_CHG_OPER_INFO_HIS.TM_X
			,BRT_CUR_CHG_OPER_INFO_HIS.TM_Y
			,BRT_CUR_CHG_OPER_INFO_HIS.CHG_OPER_DIV
			,BRT_CUR_CHG_OPER_INFO_HIS.CHG_APPR_DIV
			,BRT_CUR_CHG_OPER_INFO_HIS.OCR_DTM
			,BRT_CUR_CHG_OPER_INFO_HIS.UPD_DTM)
	VALUE(
			OLD.OPER_DT
			,OLD.REP_ROUT_ID
			,OLD.ROUT_ID
			,OLD.ALLOC_NO
			,OLD.OPER_SN
			,OLD.VHC_ID
			,OLD.VHC_NO
			,OLD.OCR_LINK_ID
			,OLD.OCR_NODE_ID
			,OLD.OCR_NODE_TYPE
			,OLD.GPS_X
			,OLD.GPS_Y
			,OLD.TM_X
			,OLD.TM_Y
			,OLD.CHG_OPER_DIV
			,OLD.CHG_APPR_DIV
			,OLD.OCR_DTM
			,NOW()

	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_CUR_OPER_ALLOC_PL_NODE_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_CUR_OPER_ALLOC_PL_NODE_INFO_after_update` AFTER UPDATE ON `sbrt`.`BRT_CUR_OPER_ALLOC_PL_NODE_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS(
			BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.OPER_DT
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.REP_ROUT_ID
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.ROUT_ID
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.COR_ID
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.OPER_SN
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.NODE_ID
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.NODE_SN
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.ALLOC_NO
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.NODE_TYPE
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.DPRT_TM
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.ARRV_TM
			,BRT_CUR_OPER_ALLOC_PL_NODE_INFO_HIS.UPD_DTM)
	VALUE(
			OLD.OPER_DT
			,OLD.REP_ROUT_ID
			,OLD.ROUT_ID
			,OLD.COR_ID
			,OLD.OPER_SN
			,OLD.NODE_ID
			,OLD.NODE_SN
			,OLD.ALLOC_NO
			,OLD.NODE_TYPE
			,OLD.DPRT_TM
			,OLD.ARRV_TM
			,NEW.UPD_DTM
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_CUR_OPER_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_CUR_OPER_INFO_after_update` AFTER UPDATE ON `sbrt`.`BRT_CUR_OPER_INFO`
  FOR EACH ROW
BEGIN


INSERT INTO BRT_CUR_OPER_HIS(
			BRT_CUR_OPER_HIS.OPER_DT
			,BRT_CUR_OPER_HIS.REP_ROUT_ID
			,BRT_CUR_OPER_HIS.VHC_ID
			,BRT_CUR_OPER_HIS.UPD_DTM
			,BRT_CUR_OPER_HIS.ROUT_ID
			,BRT_CUR_OPER_HIS.ALLOC_NO
			,BRT_CUR_OPER_HIS.OPER_SN
			,BRT_CUR_OPER_HIS.NODE_ID
			,BRT_CUR_OPER_HIS.COR_ID
			,BRT_CUR_OPER_HIS.VHC_NO
			,BRT_CUR_OPER_HIS.DRV_ID
			,BRT_CUR_OPER_HIS.GPS_X
			,BRT_CUR_OPER_HIS.GPS_Y
			,BRT_CUR_OPER_HIS.TM_X
			,BRT_CUR_OPER_HIS.TM_Y
			,BRT_CUR_OPER_HIS.OPER_STS
			,BRT_CUR_OPER_HIS.BUS_STS
			,BRT_CUR_OPER_HIS.OBE_STS
			,BRT_CUR_OPER_HIS.SNSTVTY
			,BRT_CUR_OPER_HIS.DRV_ANGLE
			,BRT_CUR_OPER_HIS.CUR_SPD
			,BRT_CUR_OPER_HIS.ACLRTN_YN
			,BRT_CUR_OPER_HIS.DCLRTN_YN
			,BRT_CUR_OPER_HIS.CUR_STOP_TM
			,BRT_CUR_OPER_HIS.OPER_LEN
			,BRT_CUR_OPER_HIS.REP_ROUT_NM
			,BRT_CUR_OPER_HIS.NODE_SN
			,BRT_CUR_OPER_HIS.NODE_TYPE
			,BRT_CUR_OPER_HIS.ARRV_TM
			,BRT_CUR_OPER_HIS.DPRT_TM
			,BRT_CUR_OPER_HIS.LINK_ID
			,BRT_CUR_OPER_HIS.LINK_SN
			,BRT_CUR_OPER_HIS.LINK_SPD
			,BRT_CUR_OPER_HIS.PRV_PLCE_NM
			,BRT_CUR_OPER_HIS.GET_OFF_CNT
			,BRT_CUR_OPER_HIS.PSG_CNT
			,BRT_CUR_OPER_HIS.NEXT_NODE_ID
			,BRT_CUR_OPER_HIS.NEXT_NODE_ARRV_TM
			,BRT_CUR_OPER_HIS.DOOR_CD
			,BRT_CUR_OPER_HIS.DOOR_TM)
	VALUE(
			OLD.OPER_DT
			,OLD.REP_ROUT_ID
			,OLD.VHC_ID
			,NOW(3)
			,OLD.ROUT_ID
			,OLD.ALLOC_NO
			,OLD.OPER_SN
			,OLD.NODE_ID
			,OLD.COR_ID
			,OLD.VHC_NO
			,OLD.DRV_ID
			,OLD.GPS_X
			,OLD.GPS_Y
			,OLD.TM_X
			,OLD.TM_Y
			,OLD.OPER_STS
			,OLD.BUS_STS
			,OLD.OBE_STS
			,OLD.SNSTVTY
			,OLD.DRV_ANGLE
			,OLD.CUR_SPD
			,OLD.ACLRTN_YN
			,OLD.DCLRTN_YN
			,OLD.CUR_STOP_TM
			,OLD.OPER_LEN
			,OLD.REP_ROUT_NM
			,OLD.NODE_SN
			,OLD.NODE_TYPE
			,OLD.ARRV_TM
			,OLD.DPRT_TM
			,OLD.LINK_ID
			,OLD.LINK_SN
			,OLD.LINK_SPD
			,OLD.PRV_PLCE_NM
			,OLD.GET_OFF_CNT
			,OLD.PSG_CNT
			,OLD.NEXT_NODE_ID
			,OLD.NEXT_NODE_ARRV_TM
			,OLD.DOOR_CD
			,OLD.DOOR_TM
	);
	
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_INCDNT_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_INCDNT_INFO_after_update` AFTER UPDATE ON `sbrt`.`BRT_INCDNT_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_INCDNT_HIS(
			BRT_INCDNT_HIS.OPER_DT
			,BRT_INCDNT_HIS.REP_ROUT_ID
			,BRT_INCDNT_HIS.VHC_ID
			,BRT_INCDNT_HIS.UPD_DTM
			,BRT_INCDNT_HIS.INCDNT_TYPE
			,BRT_INCDNT_HIS.ROUT_ID
			,BRT_INCDNT_HIS.ALLOC_NO
			,BRT_INCDNT_HIS.INCDNT_DETAIL
			,BRT_INCDNT_HIS.OPER_SN
			,BRT_INCDNT_HIS.COR_ID
			,BRT_INCDNT_HIS.OCR_DTM
			,BRT_INCDNT_HIS.VHC_NO
			,BRT_INCDNT_HIS.DRV_ID
			,BRT_INCDNT_HIS.REP_ROUT_NM
			,BRT_INCDNT_HIS.ROUT_NM
			,BRT_INCDNT_HIS.LINK_ID
			,BRT_INCDNT_HIS.NODE_ID
			,BRT_INCDNT_HIS.GPS_X
			,BRT_INCDNT_HIS.GPS_Y
			,BRT_INCDNT_HIS.TM_X
			,BRT_INCDNT_HIS.TM_Y
			,BRT_INCDNT_HIS.REMARK)
	VALUE(
			OLD.OPER_DT
			,OLD.REP_ROUT_ID
			,OLD.VHC_ID
			,NOW()
			,OLD.INCDNT_TYPE
			,OLD.ROUT_ID
			,OLD.ALLOC_NO
			,OLD.INCDNT_DETAIL
			,OLD.OPER_SN
			,OLD.COR_ID
			,OLD.OCR_DTM
			,OLD.VHC_NO
			,OLD.DRV_ID
			,OLD.REP_ROUT_NM
			,OLD.ROUT_NM
			,OLD.LINK_ID
			,OLD.NODE_ID
			,OLD.GPS_X
			,OLD.GPS_Y
			,OLD.TM_X
			,OLD.TM_Y
			,OLD.REMARK
				);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_OPER_ALLOC_PL_NODE_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_OPER_ALLOC_PL_NODE_INFO_after_update` AFTER UPDATE ON `sbrt`.`BRT_OPER_ALLOC_PL_NODE_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_OPER_ALLOC_PL_NODE_INFO_HIS(
			BRT_OPER_ALLOC_PL_NODE_INFO_HIS.REP_ROUT_ID
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.DAY_DIV
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.WAY_DIV
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.OPER_SN
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.NODE_ID
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.NODE_SN
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.ALLOC_NO
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.ROUT_ID
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.COR_ID
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.NODE_TYPE
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.ARRV_TM
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.DPRT_TM
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.UPD_DTM
			,BRT_OPER_ALLOC_PL_NODE_INFO_HIS.UPD_ID)
	VALUE(
			OLD.REP_ROUT_ID
			,OLD.DAY_DIV
			,OLD.WAY_DIV
			,OLD.OPER_SN
			,OLD.NODE_ID
			,OLD.NODE_SN
			,OLD.ALLOC_NO
			,OLD.ROUT_ID
			,OLD.COR_ID
			,OLD.NODE_TYPE
			,OLD.ARRV_TM
			,OLD.DPRT_TM
			,NOW()
			,OLD.UPD_ID
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_OPER_ALLOC_PL_ROUT_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_OPER_ALLOC_PL_ROUT_INFO_after_update` AFTER UPDATE ON `sbrt`.`BRT_OPER_ALLOC_PL_ROUT_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_OPER_ALLOC_PL_ROUT_INFO_HIS(
			BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.REP_ROUT_ID
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.DAY_DIV
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.WAY_DIV
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.OPER_SN
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.ALLOC_NO
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.ROUT_ID
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.COR_ID
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.ROUT_ST_TM
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.ROUT_ED_TM
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.UPD_DTM
			,BRT_OPER_ALLOC_PL_ROUT_INFO_HIS.UPD_ID)
	VALUE(
			OLD.REP_ROUT_ID
			,OLD.DAY_DIV
			,OLD.WAY_DIV
			,OLD.OPER_SN
			,OLD.ALLOC_NO
			,OLD.ROUT_ID
			,OLD.COR_ID
			,OLD.ROUT_ST_TM
			,OLD.ROUT_ED_TM
			,NOW()
			,OLD.UPD_ID
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_OPER_PL_MST_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_OPER_PL_MST_after_update` AFTER UPDATE ON `sbrt`.`BRT_OPER_PL_MST`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_OPER_PL_MST_HIS(
			BRT_OPER_PL_MST_HIS.REP_ROUT_ID
			,BRT_OPER_PL_MST_HIS.DAY_DIV
			,BRT_OPER_PL_MST_HIS.WAY_DIV
			,BRT_OPER_PL_MST_HIS.ST_STTN_ID
			,BRT_OPER_PL_MST_HIS.ED_STTN_ID
			,BRT_OPER_PL_MST_HIS.OPER_CNT
			,BRT_OPER_PL_MST_HIS.ALLOC_CNT
			,BRT_OPER_PL_MST_HIS.FST_TM
			,BRT_OPER_PL_MST_HIS.LST_TM
			,BRT_OPER_PL_MST_HIS.AM_PEAK_ST_TM
			,BRT_OPER_PL_MST_HIS.AM_PEAK_ED_TM
			,BRT_OPER_PL_MST_HIS.PM_PEAK_ST_TM
			,BRT_OPER_PL_MST_HIS.PM_PEAK_ED_TM
			,BRT_OPER_PL_MST_HIS.AM_PEAK
			,BRT_OPER_PL_MST_HIS.PM_PEAK
			,BRT_OPER_PL_MST_HIS.NONE_PEAK
			,BRT_OPER_PL_MST_HIS.UPD_DTM
			,BRT_OPER_PL_MST_HIS.UPD_ID)
	VALUE(
			OLD.REP_ROUT_ID
			,OLD.DAY_DIV
			,OLD.WAY_DIV
			,OLD.ST_STTN_ID
			,OLD.ED_STTN_ID
			,OLD.OPER_CNT
			,OLD.ALLOC_CNT
			,OLD.FST_TM
			,OLD.LST_TM
			,OLD.AM_PEAK_ST_TM
			,OLD.AM_PEAK_ED_TM
			,OLD.PM_PEAK_ST_TM
			,OLD.PM_PEAK_ED_TM
			,OLD.AM_PEAK
			,OLD.PM_PEAK
			,OLD.NONE_PEAK
			,NOW()
			,OLD.UPD_ID
	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

-- 트리거 sbrt.BRT_OPER_PL_ROUT_INFO_after_update 구조 내보내기
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `sbrt`.`BRT_OPER_PL_ROUT_INFO_after_update` AFTER UPDATE ON `sbrt`.`BRT_OPER_PL_ROUT_INFO`
  FOR EACH ROW
BEGIN
INSERT INTO BRT_OPER_PL_ROUT_INFO_HIS(
			BRT_OPER_PL_ROUT_INFO_HIS.REP_ROUT_ID
			,BRT_OPER_PL_ROUT_INFO_HIS.DAY_DIV
			,BRT_OPER_PL_ROUT_INFO_HIS.WAY_DIV
			,BRT_OPER_PL_ROUT_INFO_HIS.OPER_SN
			,BRT_OPER_PL_ROUT_INFO_HIS.ROUT_ID
			,BRT_OPER_PL_ROUT_INFO_HIS.ROUT_ST_TM
			,BRT_OPER_PL_ROUT_INFO_HIS.ROUT_ED_TM
			,BRT_OPER_PL_ROUT_INFO_HIS.UPD_DTM
			,BRT_OPER_PL_ROUT_INFO_HIS.UPD_ID)
	VALUE(
			OLD.REP_ROUT_ID
			,OLD.DAY_DIV
			,OLD.WAY_DIV
			,OLD.OPER_SN
			,OLD.ROUT_ID
			,OLD.ROUT_ST_TM
			,OLD.ROUT_ED_TM
			,NOW()
			,OLD.UPD_ID

	);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
