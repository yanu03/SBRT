<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.tracom.brt.domain.AL0202.AL0202Mapper">
	<select id="AL0202G0R0" resultType="Map">
		SELECT A.REP_ROUT_ID,
				A.DAY_DIV,
				SUM(A.OPER_CNT) AS OPER_CNT,
				MAX(A.ALLOC_CNT) AS ALLOC_CNT,
				B.WAY_ASC_NM,
				B.WAY_DESC_NM,
				(SELECT STTN_NM FROM BMS_STTN_MST WHERE STTN_ID = A.ST_STTN_ID AND DEL_YN!='Y') ST_STTN_NM,
				<!-- (SELECT STTN_ENM FROM BMS_STTN_MST WHERE STTN_ID = A.ST_STTN_ID) ST_STTN_ENM, -->
				(SELECT STTN_NM FROM BMS_STTN_MST WHERE STTN_ID = A.ED_STTN_ID AND DEL_YN!='Y') ED_STTN_NM,
				<!-- (SELECT STTN_ENM FROM BMS_STTN_MST WHERE STTN_ID = A.ED_STTN_ID) ED_STTN_ENM, -->
				B.REP_ROUT_NM,
				B.WAY_YN,
				B.ROUT_DIV
		FROM	BRT_OPER_PL_MST A INNER JOIN BMS_REP_ROUT_MST B
		ON		A.REP_ROUT_ID = B.REP_ROUT_ID
	<where>
		<if test="@kr.tracom.util.CommonUtil@notEmpty(CONTENT)">
			<if test="TYPE == 'ALL'||TYPE == ''">
				AND (A.REP_ROUT_ID LIKE CONCAT('%',#{CONTENT},'%') || B.REP_ROUT_NM LIKE CONCAT('%',#{CONTENT},'%'))
			</if>
			<if test="TYPE == 'REP_ROUT_ID'">
				AND A.REP_ROUT_ID LIKE CONCAT('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'REP_ROUT_NM'">
				AND B.REP_ROUT_NM LIKE CONCAT('%',#{CONTENT},'%') 
			</if>
		</if>
	</where>
		GROUP BY B.REP_ROUT_NM, A.DAY_DIV
		ORDER BY B.REP_ROUT_NM, A.DAY_DIV
	</select>

	<select id="AL0202G1R0" resultType="Map">
		SELECT A.REP_ROUT_ID,
			A.ROUT_ID,
			A.DAY_DIV,
			A.WAY_DIV,
			A.OPER_SN,
			A.ALLOC_NO,
			A.COR_ID,
			A.REST_TM,
			A.ROUT_ST_TM,
			A.ROUT_ED_TM,
			A.UPD_DTM,
			A.UPD_ID,
			B.REP_ROUT_NM,
			B.WAY_ASC_NM,
			B.WAY_DESC_NM,
			C.ROUT_NM,
			D.COR_NM,
			D.COR_COLOR
		FROM BRT_OPER_ALLOC_PL_ROUT_INFO A
			INNER JOIN BMS_REP_ROUT_MST B
				ON A.REP_ROUT_ID = B.REP_ROUT_ID
			LEFT OUTER JOIN BMS_ROUT_MST C
				ON A.ROUT_ID = C.ROUT_ID
			LEFT OUTER JOIN BRT_COR_MST D
				ON A.COR_ID = D.COR_ID 
		WHERE A.REP_ROUT_ID = #{REP_ROUT_ID}
			AND A.DAY_DIV = #{DAY_DIV}
			ORDER BY REP_ROUT_ID, DAY_DIV, ALLOC_NO, OPER_SN
	</select>
	
	<select id="AL0202G1CNT" resultType="Map">
		SELECT COUNT(*) CNT
		FROM BRT_OPER_ALLOC_PL_ROUT_INFO
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV}
		GROUP BY REP_ROUT_ID, DAY_DIV, ALLOC_NO 
		ORDER BY REP_ROUT_ID, DAY_DIV, ALLOC_NO

	</select>
	
	

	
	<select id="AL0202P0R0" resultType="Map">
	    SELECT  COR_ID,
				REP_ROUT_ID,
				COR_NM
	
	      FROM   BRT_COR_MST
<!-- 	      ON      A.REP_ROUT_ID = B.REP_ROUT_ID INNER JOIN BMS_ROUT_MST C
	      ON      A.ROUT_ID = C.ROUT_ID 
	      WHERE   A.REP_ROUT_ID = #{REP_ROUT_ID}
	      AND     A.DAY_DIV = #{DAY_DIV} -->
	</select>	
	
	<select id="AL0202P1R0" resultType="Map">
		SELECT  A.REP_ROUT_ID,
				A.ROUT_ID,
				B.ROUT_NM,
				A.OPER_SN,
				A.ROUT_ST_TM,
				A.ROUT_ED_TM
				
		FROM	BRT_OPER_PL_ROUT_INFO A INNER JOIN BMS_ROUT_MST B
		ON		A.REP_ROUT_ID = B.REP_ROUT_ID
		WHERE	B.REP_ROUT_ID = #{REP_ROUT_ID}
	</select>
	
	<insert id="AL0202G1I0" parameterType="Map">
		INSERT INTO BRT_OPER_ALLOC_PL_ROUT_INFO(REP_ROUT_ID,DAY_DIV,OPER_SN,ALLOC_NO,WAY_DIV,ROUT_ID,COR_ID,ALLOC_NM,ROUT_ST_TM,ROUT_ED_TM,REST_TM,UPD_DTM,UPD_ID )
		VALUES(#{REP_ROUT_ID},#{DAY_DIV},#{OPER_SN},#{ALLOC_NO},#{WAY_DIV},#{ROUT_ID},#{COR_ID},#{ALLOC_NM},#{ROUT_ST_TM},#{ROUT_ED_TM},#{REST_TM},#{UPD_DTM},#{SSN_USER_ID})
	</insert>
	
	<update id="AL0202G1U0" parameterType="Map">
		UPDATE BRT_OPER_ALLOC_PL_ROUT_INFO
		SET REP_ROUT_ID = #{REP_ROUT_ID}, DAY_DIV = #{DAY_DIV}, OPER_SN = #{OPER_SN}, ALLOC_NO = #{ALLOC_NO}, WAY_DIV = #{WAY_DIV}
			, ROUT_ID = #{ROUT_ID}, COR_ID = #{COR_ID}, ALLOC_NM = #{ALLOC_NM}, ROUT_ST_TM = #{ROUT_ST_TM}, ROUT_ED_TM = #{ROUT_ED_TM}
			, REST_TM = #{REST_TM}, UPD_DTM = #{UPD_DTM}, UPD_ID = #{SSN_USER_ID}' 
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV}  AND OPER_SN = #{OPER_SN} AND ALLOC_NO = #{ALLOC_NO} 
	</update>
	
	<delete id="AL0202G1D0" parameterType="Map">
		DELETE FROM BRT_OPER_ALLOC_PL_NODE_INFO
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV}  AND OPER_SN = #{OPER_SN} AND ALLOC_NO = #{ALLOC_NO};
		DELETE FROM BRT_OPER_ALLOC_PL_ROUT_INFO
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV}  AND OPER_SN = #{OPER_SN} AND ALLOC_NO = #{ALLOC_NO} 
	</delete>
	
	<delete id="AL0202G1DA0" parameterType="Map">
		DELETE FROM BRT_OPER_ALLOC_PL_NODE_INFO
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV};
		DELETE FROM BRT_OPER_ALLOC_PL_ROUT_INFO
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV}
	</delete>
	
	<insert id="AL0202G1I1" parameterType="Map">
		INSERT INTO BRT_OPER_ALLOC_PL_COR_INFO( REP_ROUT_ID,DAY_DIV,ALLOC_NO,COR_SN,COR_ID,WAY_DIV,UPD_DTM,UPD_ID )
		VALUES(#{REP_ROUT_ID},#{DAY_DIV},#{ALLOC_NO},#{COR_SN},#{COR_ID},#{WAY_DIV},#{UPD_DTM},#{SSN_USER_ID} )
	</insert>
	
	<update id="AL0202G1U1" parameterType="Map">
		UPDATE BRT_OPER_ALLOC_PL_COR_INFO
		SET REP_ROUT_ID = #{REP_ROUT_ID}, DAY_DIV = #{DAY_DIV}, ALLOC_NO = #{ALLOC_NO}, COR_SN = #{COR_SN}, COR_ID = #{COR_ID}
			, WAY_DIV = #{WAY_DIV}, UPD_DTM = #{UPD_DTM}, UPD_ID = #{SSN_USER_ID}' 
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV} AND ALLOC_NO = #{ALLOC_NO} AND COR_SN = #{COR_SN}
	</update>

	<delete id="AL0202G1D1" parameterType="Map">
		DELETE FROM BRT_OPER_ALLOC_PL_COR_INFO
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV} AND ALLOC_NO = #{ALLOC_NO} AND COR_SN = #{COR_SN}
	</delete>

	<delete id="AL0202G1DA1" parameterType="Map">
		DELETE FROM BRT_OPER_ALLOC_PL_COR_INFO
		WHERE REP_ROUT_ID = #{REP_ROUT_ID} AND DAY_DIV = #{DAY_DIV}
	</delete>	
</mapper>