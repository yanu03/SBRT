<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.tracom.bms.domain.VD0203.VD0203Mapper">

	<select id="VD0203G0R0" resultType="Map">
		SELECT
			VM.VHC_NO
			,MAX(IF(UL.COMPLETE_YN IS NULL, '', IF(UL.COMPLETE_YN = 'N', '예약중', ''))) AS COMPLETE_YN
			,DI.DVC_KIND
			,OM.ORG_DIV
			,DI.INST_LOC
			,DI.DVC_ID
			,DI.DVC_IP
			,DI.MNG_ID
			,DI.REMARK
			,VM.VHC_ID
			,UL.RSV_ID
		FROM BMS_DVC_INFO DI 
			LEFT JOIN BMS_VHC_MST VM ON DI.VHC_ID = VM.VHC_ID
			LEFT JOIN BMS_UPD_LOG UL ON DI.MNG_ID = UL.MNG_ID
			LEFT JOIN BMS_ORG_MST OM ON DI.ORG_ID = OM.ORG_ID
		<where>
			<if test="TYPE == 'ALL' and CONTENT != null and CONTENT != ''">
				AND USER_ID LIKE CONCAT('%',#{CONTENT},'%') || USER_NM LIKE CONCAT('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'VHC_NO'">
				AND VHC_NO LIKE CONCAT('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'COMPLETE_YN'">
				AND COMPLETE_YN LIKE CONCAT('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'DVC_KIND'">
				AND DVC_KIND LIKE CONCAT('%',#{DVC_KIND},'%')
			</if>
			<if test="DVC_KIND != null and DVC_KIND != ''">
				AND DI.DVC_KIND = #{DVC_KIND}
			</if>
		</where>
		GROUP BY DI.MNG_ID
		ORDER BY VM.VHC_NO ASC, DI.MNG_ID ASC		
	</select>
	
	<select id="VD0203G1R0" parameterType="Map"  resultType="Map">
		SELECT
			VM.VHC_NO
			,(IF(UL.COMPLETE_YN IS NULL, '', IF(UL.COMPLETE_YN = 'N', '예약중', ''))) AS COMPLETE_YN
			,date_format(URI.RSV_DT, '%Y-%m-%d') as RSV_DT
			,UL.PROCE_RST
			,date_format(UL.SEND_DTM,'%Y-%m-%d') as SEND_DTM
			,DI.MNG_ID
			,OM.ORG_DIV
			,DI.DVC_KIND
			,DI.INST_LOC
		FROM
				BMS_DVC_INFO DI LEFT JOIN BMS_VHC_MST VM ON DI.VHC_ID = VM.VHC_ID
								LEFT JOIN BMS_UPD_LOG UL ON DI.MNG_ID = UL.MNG_ID
								LEFT JOIN BMS_ORG_MST OM ON DI.ORG_ID = OM.ORG_ID
								LEFT JOIN BMS_UPD_RSV_INFO URI ON UL.RSV_ID = URI.RSV_ID
		WHERE
			DI.VHC_ID = #{VHC_ID}
			<if test="DVC_KIND != null and DVC_KIND != ''">
				AND DI.DVC_KIND = #{DVC_KIND}
			</if>			
		ORDER BY 
			VM.VHC_NO	
	</select>

	<select id="VD0203SHI0" resultType="Map">
		SELECT 
			VM.VHC_NO
			,UL.COMPLETE_YN
			,DI.DVC_KIND
		FROM 
			BMS_VHC_MST VM 
			INNER JOIN BMS_DVC_INFO DI ON VM.VHC_ID = DI.VHC_ID
			INNER JOIN BMS_UPD_LOG UL ON DI.MNG_ID = UL.MNG_ID
	</select>
	
	<insert id="VD0203G0I0" parameterType="Map">
	
		<selectKey keyProperty="RSV_ID" resultType="String" order="BEFORE">
    		SELECT CONCAT('UR', LPAD(NEXTVAL(SEQ_BMS_UPD_LOG_0), 8, '0')) AS RSV_ID
    	</selectKey>	
		insert into BMS_UPD_LOG
				(
					RSV_ID
					,MNG_ID
					,PROCE_RST
					,COMPLETE_YN
					,REMARK
				)	
				   
		values (
					#{RSV_ID}
					,#{MNG_ID}
					,#{PROCE_RST}
					,'N'
					,#{REMARK}
				)
	</insert>
	
	<insert id="VD0203G0I1" parameterType="Map">
		insert into BMS_UPD_RSV_INFO
				(
					RSV_ID
					,MNG_ID
					,RSV_DT
					,ATTACH_ID
					,VER_INFO
					,UPD_DTM
					,UPD_ID
				)
		values	(
					#{RSV_ID}
					,#{MNG_ID}
					,NOW()
					,#{ATTACH_ID}
					,#{VER_INFO}
					,#{UPD_DTM}
					,#{UPD_ID}
				)
			
	</insert>
	
	<update id="VD0203G0D0" parameterType="Map">
		UPDATE 
			BMS_UPD_LOG
		SET	
			PROCE_RST = 'PR008'
			,SEND_DTM = NOW()
			,COMPLETE_YN = 'Y'
		WHERE
			MNG_ID = #{MNG_ID}
			AND COMPLETE_YN = 'N'
			<!-- RSV_ID = #{RSV_ID} -->
	</update>
	
	<!-- SELECT 
		VM.VHC_NO
		,UL.COMPLETE_YN
	FROM 
		sbrt.BMS_VHC_MST VM 
		INNER JOIN sbrt.BMS_DVC_INFO DI ON VM.VHC_ID = DI.VHC_ID
		INNER JOIN sbrt.BMS_UPD_LOG UL ON DI.MNG_ID = UL.MNG_ID -->

	<!--<select id="SM0403G0R0" resultType="Map">
	 	SELECT
	 		DATE_FORMAT(OCR_DTM, '%Y-%m-%d %h:%i:%s') OCR_DTM
	 		,USER_ID
	 		,USER_NM
	 		,LOGIN_STS
	 		,IP
		FROM 
			BMS_USER_HIS
			
		<where>
			<if test="TYPE == 'ALL' and CONTENT != null and CONTENT != ''">
				AND USER_ID LIKE CONCAT('%',#{CONTENT},'%') || USER_NM LIKE CONCAT('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'USER_ID'">
				AND USER_ID LIKE CONCAT('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'USER_NM'">
				AND USER_NM LIKE CONCAT('%',#{CONTENT},'%') 
			</if>
			<if test="(F_DATE != null and F_DATE != '') and (L_DATE == null or L_DATE == '')">
				<![CDATA[AND OCR_DTM >= #{F_DATE}]]>
			</if>
			<if test="(F_DATE == null or F_DATE == '') and L_DATE != null and L_DATE != '' ">
				<![CDATA[AND OCR_DTM <= #{L_DATE}]]>
			</if>
			<if test="F_DATE != null and F_DATE != '' and L_DATE != null and L_DATE != '' ">
				AND OCR_DTM between #{F_DATE} and #{L_DATE}
			</if>			
			
		</where>
	</select>
	
	<select id="SM0403SHI0" resultType="Map">
		SELECT 
			USER_ID
			,USER_NM
		FROM 
			BMS_USER_HIS
	</select>
	
	
	
	<select id="SM0601G1R0" resultType="Map">
		SELECT USER_ID, U.ORG_ID, USER_NM, U.EMAIL, HP_NO, ORG_NM 
		FROM BMS_USER_MST U, BMS_ORG_MST O 
		<where>
			<foreach collection="array" item="item" separator=" OR "> (USER_ID = #{item} AND U.ORG_ID = O.ORG_ID)</foreach>
		</where>
		
	</select>
	
	<select id="SM0601P0R0" resultType="Map" parameterType="Map">
		SELECT U.USER_ID, U.EMAIL, U.USER_NM, U.ORG_ID, O.ORG_NM	FROM BMS_USER_MST U, BMS_ORG_MST O 
		WHERE U.ORG_ID = O.ORG_ID AND U.USER_ID NOT IN (SELECT U.USER_ID 
		FROM BMS_USER_MST U, BMS_ORG_MST O WHERE 
		<foreach collection="RCPT_IDS" item="item" separator=" OR "> U.ORG_ID = O.ORG_ID AND U.USER_ID = #{item}</foreach>
		)
		<if test="TYPE == 'USER_ID'">
			AND U.USER_ID LIKE CONCAT('%',#{CONTENT},'%')
		</if>
		<if test="TYPE == 'USER_NM'">
			AND U.USER_NM LIKE CONCAT('%',#{CONTENT},'%')
		</if>
		ORDER BY U.USER_ID		
	</select>
	
	<insert id="SM0601G0I0" parameterType="Map">
		<selectKey keyProperty="EMAIL_ID" resultType="String" order="BEFORE">
	          SELECT CONCAT('EM', LPAD(NEXTVAL(SEQ_BMS_EMAIL_MST_0), 8, '0'))
		</selectKey>	
		INSERT INTO BMS_EMAIL_MST(EMAIL_ID, SENDER_NM, SENDER_ADDR, RCPT_IDS, EMAIL_TITLE, EMAIL_CONTENTS,
		SEND_DIV, SEND_STS, RSV_DTM, SEND_DTM, UPD_DTM, UPD_ID) 
		VALUES (#{EMAIL_ID}, #{SENDER_NM}, #{SENDER_ADDR}, #{RCPT_IDS}, #{EMAIL_TITLE}, #{EMAIL_CONTENTS},
		#{SEND_DIV}, #{SEND_STS}, STR_TO_DATE(#{RSV_DTM}, '%Y%m%d%H%i'), STR_TO_DATE(#{SEND_DTM}, '%Y%m%d%H%i'), 
		#{UPD_DTM}, #{UPD_ID})
	</insert>

	<delete id="SM0601G0D0" parameterType="Map">
		DELETE FROM BMS_EMAIL_MST WHERE EMAIL_ID = #{EMAIL_ID}
	</delete>
	
	<update id="SM0601G0U0" parameterType="Map">
		UPDATE BMS_EMAIL_MST SET SENDER_NM = #{SENDER_NM}, SENDER_ADDR = #{SENDER_ADDR}, 
		RCPT_IDS = #{RCPT_IDS}, EMAIL_TITLE = #{EMAIL_TITLE}, EMAIL_CONTENTS = #{EMAIL_CONTENTS},	
		SEND_DIV = #{SEND_DIV}, SEND_STS = #{SEND_STS}, RSV_DTM = STR_TO_DATE(#{RSV_DTM}, '%Y%m%d%H%i'), 
		SEND_DTM = STR_TO_DATE(#{SEND_DTM}, '%Y%m%d%H%i'), UPD_DTM = #{UPD_DTM}, UPD_ID = #{UPD_ID} WHERE EMAIL_ID = #{EMAIL_ID}
	</update> -->
</mapper>