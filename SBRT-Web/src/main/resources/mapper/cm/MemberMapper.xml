<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.tracom.cm.domain.Member.MemberMapper">

	<select id="selectLoginAuthCheck" resultType="Map" parameterType="Map">
		SELECT AUTH_CD 
		  FROM BMS_USER_AUTH_CMPSTN 
		 WHERE USER_ID = #{USER_ID}
	</select>

	<select id="selectMemberBasicOrganization" resultType="Map">
		SELECT ORG_NM, ORG_ID 
		  FROM BMS_ORG_MST 
		 ORDER BY ORG_ID
	</select>

	<select id="selectMemberBasic" resultType="Map" parameterType="Map">
		SELECT USER_ID,ORG_ID,SYSTEM_BIT,USER_NM,SCD_PS,EMAIL,HP_NO,SCD_PS_USE_YN,USE_YN,REMARK
		FROM BMS_USER_MST
		<where>
			<if test="TYPE == 'USER_NM'">
				AND USER_NM LIKE concat('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'USER_ID'">
				AND USER_ID LIKE concat('%',#{CONTENT},'%')
			</if>
			<if test="TYPE == 'ORG_ID'">
				<if test="CONTENT == ''">
					AND USER_ID IS NOT NULL
				</if>
				<if test="CONTENT != ''">
					AND ORG_ID = #{CONTENT}
				</if>
			</if>
		</where>
		ORDER BY USER_ID
	</select>

	<select id="selectMemberSearchItem" resultType="Map">
		select USER_NM, USER_ID from BMS_USER_MST
	</select>

	<select id="selectMemberOragn" resultType="Map" parameterType="Map">
		SELECT HPB.USER_ID, HOB.ORG_NM, HPB.SYSTEM_BIT, HPB.USER_NM, HPB.EMAIL, HPB.HP_NO
			,HPB.SCD_PS_USE_YN,HPB.USE_YN,HPB.REMARK
		 FROM BMS_USER_MST HPB
			  LEFT OUTER JOIN BMS_ORG_MST HOB ON HPB.ORG_ID = HOB.ORG_ID

		<where>
			<if test="USER_ID != ''">
				AND HPB.USER_ID = #{USER_ID}
			</if>
			<if test="USER_NM != ''">
				AND HPB.USER_NM LIKE CONCAT( '%', #{USER_NM}, '%' )
			</if>
		</where>
	</select>

	<insert id="insertMemberBasic" parameterType="Map">
		insert into BMS_USER_MST( USER_ID,USER_NM,ORG_ID,SYSTEM_BIT,USER_PS,EMAIL,HP_NO, USE_YN,REMARK,UPD_DTM,UPD_ID )
		values( #{USER_ID},#{USER_NM},#{ORG_ID},#{SYSTEM_BIT},#{USER_PS}, #{EMAIL},#{HP_NO},
		'Y',#{REMARK},SYS_DATE(),#{SESSION_USER_ID} )
	</insert>


	<update id="updateMemberBasic" parameterType="Map">
		UPDATE BMS_USER_MST
		   SET USER_NM = #{USER_NM}, ORG_ID = #{ORG_ID}, SYSTEM_BIT = #{SYSTEM_BIT}, USER_PS = #{USER_PS}
			 , EMAIL = #{EMAIL}, HP_NO = #{HP_NO}, USE_YN = #{USE_YN}, REMARK = #{REMARK}
			 , UPD_DTM = SYS_DATE()}, UPD_ID = #{SESSION_USER_ID}
		 WHERE USER_ID = #{USER_ID}
	</update>

	<delete id="deleteMemberBasic" parameterType="Map">
		DELETE FROM BMS_USER_MST WHERE USER_ID = #{USER_ID}
	</delete>

	<select id="selectMemberFamilyList" resultType="Map" parameterType="Map">
		SELECT USER_ID, SEQ, RELATIONSHIP, FAMILY_NM, RESIDENT_NO, JOB, IS_CORESIDENCE, IS_SUPPORT
		  FROM HM_MEMBER_FAMILY
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				AND USER_ID = #{USER_ID}
			</if>
		</where>
	</select>

	<select id="selectMemberFamilyMaxSeq" resultType="int" parameterType="Map">
		SELECT CASE WHEN (COUNT(*) > 0) THEN MAX(SEQ) ELSE 0 END AS MAX_SEQ
		  FROM HM_MEMBER_FAMILY
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				AND USER_ID = #{USER_ID}
			</if>
		</where>
	</select>

	<insert id="insertMemberFamily" parameterType="Map">
		INSERT INTO HM_MEMBER_FAMILY(USER_ID, SEQ, RELATIONSHIP, FAMILY_NM, RESIDENT_NO, JOB, IS_CORESIDENCE, IS_SUPPORT)
		VALUES (#{USER_ID}, #{SEQ}, #{RELATIONSHIP}, #{FAMILY_NM}, #{RESIDENT_NO}, #{JOB}, #{IS_CORESIDENCE}, #{IS_SUPPORT})
	</insert>

	<update id="updateMemberFamily" parameterType="Map">
		UPDATE HM_MEMBER_FAMILY
		   SET RELATIONSHIP = #{RELATIONSHIP}, FAMILY_NM = #{FAMILY_NM}, RESIDENT_NO = #{RESIDENT_NO}, JOB = #{JOB}, IS_CORESIDENCE = #{IS_CORESIDENCE},
			   IS_SUPPORT = #{IS_SUPPORT}
		 WHERE USER_ID = #{USER_ID} AND SEQ = #{SEQ}
	</update>

	<delete id="deleteMemberFamily" parameterType="Map">
		DELETE FROM HM_MEMBER_FAMILY WHERE USER_ID = #{USER_ID} AND SEQ = #{SEQ}
	</delete>

	<select id="selectMemberProjectList" resultType="Map" parameterType="Map">
		SELECT USER_ID, SEQ, PROJECT_NM, PROJECT_DESC, START_DATE, END_DATE, ORDERING_ORG, COMPANY, REMARK
		  FROM HM_MEMBER_PROJECT
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				AND USER_ID = #{USER_ID}
			</if>
		</where>
	</select>

	<select id="selectMemberProjectMaxSeq" resultType="int">
		SELECT CASE WHEN (COUNT(*) > 0) THEN MAX(SEQ) ELSE 0 END AS MAX_SEQ
		  FROM HM_MEMBER_PROJECT
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				AND USER_ID = #{USER_ID}
			</if>
		</where>
	</select>

	<insert id="insertMemberProject" parameterType="Map">
		INSERT INTO HM_MEMBER_PROJECT(USER_ID, SEQ, PROJECT_NM, PROJECT_DESC, START_DATE,
									  END_DATE, ORDERING_ORG, COMPANY, REMARK)
			 VALUES (#{USER_ID}, #{SEQ}, #{PROJECT_NM}, #{PROJECT_DESC}, #{START_DATE}, #{END_DATE}
				   , #{ASSIGNED_TASK}, #{ORDERING_ORG}, #{COMPANY}, #{REMARK})
	</insert>

	<update id="updateMemberProject" parameterType="Map">
		UPDATE HM_MEMBER_PROJECT
		   SET PROJECT_NM = #{PROJECT_NM}, PROJECT_DESC = #{PROJECT_DESC}
			 , START_DATE = #{START_DATE}, END_DATE = #{END_DATE}
			 , ORDERING_ORG = #{ORDERING_ORG}, COMPANY = #{COMPANY}, REMARK = #{REMARK}
		 WHERE USER_ID = #{USER_ID} AND SEQ = #{SEQ}
	</update>

	<delete id="deleteMemberProject" parameterType="Map">
		DELETE FROM HM_MEMBER_PROJECT WHERE USER_ID = #{USER_ID} AND SEQ = #{SEQ}
	</delete>

	<select id="selectZipCodeList" resultType="Map">
		SELECT ZIP_CD, CONCAT(CITY, ' ', COUNTRY, ' ', TOWN, ' ', BUILDING, ' ', FROM_NO) as ADDRESS FROM BM_ZIP_CODE
		<where>
			<if test="SEARCH_KEYWORD != null and SEARCH_KEYWORD != ''">
				AND (TOWN LIKE CONCAT('%', #{SEARCH_KEYWORD}, '%')) OR (BUILDING LIKE CONCAT('%', #{SEARCH_KEYWORD}, '%'))
			</if>
		</where>
	</select>
</mapper>